name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            sys-name: linux
          - os: macos-latest
            sys-name: macos
          - os: windows-latest
            sys-name: windows

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install system dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y gcc python3-dev

      - name: Install Nuitka
        run: pip install nuitka

      - name: Build main.py
        run: |
          python -m nuitka --standalone --onefile main.py
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv main.exe main-${{ matrix.sys-name }}.exe
          else
            mv main main-${{ matrix.sys-name }}
          fi

      - name: Build hira2roma.py
        run: |
          python -m nuitka --standalone --onefile hira2roma.py
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv hira2roma.exe hira2roma-${{ matrix.sys-name }}.exe
          else
            mv hira2roma hira2roma-${{ matrix.sys-name }}
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.sys-name }}
          path: |
            *-${{ matrix.sys-name }}*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir release_assets
          find artifacts -type f -exec cp {} release_assets \;

      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          files: release_assets/*
