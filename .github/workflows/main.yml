name: Auto Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: '输入自定义版本号 (例如: 1.2.3)'
        required: false
        default: 'dev'

jobs:
  build:
    name: Build ${{ matrix.app }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        app: [main, hira2roma]
        include:
          - os: windows-latest
            sys_name: windows
            arch: x64
          - app: main
            pkg_name: TextGrid2oto
          - app: hira2roma
            pkg_name: hira2roma

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Setup cache paths
        id: cache-paths
        run: |
          # 自动检测并创建缓存目录
          if [ "$RUNNER_OS" == "Windows" ]; then
            pip_cache_dir="$Env:LOCALAPPDATA/pip/Cache"
            nuitka_cache_dir="$Env:LOCALAPPDATA/Nuitka"
          else
            pip_cache_dir="$HOME/.cache/pip"
            nuitka_cache_dir="$HOME/.cache/nuitka"
          fi

          mkdir -p "$pip_cache_dir"
          mkdir -p "$nuitka_cache_dir"

          echo "pip_dir=$pip_cache_dir" >> $GITHUB_OUTPUT
          echo "nuitka_dir=$nuitka_cache_dir" >> $GITHUB_OUTPUT

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ${{ steps.cache-paths.outputs.pip_dir }}
          key: pip-${{ runner.os }}-${{ matrix.app }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-${{ matrix.app }}-
            pip-${{ runner.os }}-

      - name: Cache Nuitka builds
        uses: actions/cache@v3
        with:
          path: ${{ steps.cache-paths.outputs.nuitka_dir }}
          key: nuitka-${{ runner.os }}-${{ matrix.app }}-${{ hashFiles('${{ matrix.app }}.py') }}
          restore-keys: |
            nuitka-${{ runner.os }}-${{ matrix.app }}-
            nuitka-${{ runner.os }}-
          enableCrossOsArchive: true

      - name: Install Nuitka
        run: pip install --cache-dir "${{ steps.cache-paths.outputs.pip_dir }}" nuitka

      - name: Build executable
        shell: bash
        run: |
          # 版本号逻辑保持不变...
          # 新增环境变量设置
          export NUITKA_CACHE_DIR="${{ steps.cache-paths.outputs.nuitka_dir }}"
          
          # 修改Nuitka编译命令
          python -m nuitka \
            --standalone \
            --onefile \
            --assume-yes-for-downloads \
            --enable-plugin=upx \
            --output-dir=./build \
            ${{ matrix.app }}.py

          # 文件重命名和移动逻辑保持不变...


      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg_name }}-${{ matrix.sys_name }}
          path: dist/

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: '*-windows'

      - name: Package release
        run: |
          # 创建统一目录结构
          mkdir -p package
          # 合并所有构件
          find artifacts -name '*.exe' -exec cp -v {} package \;
          find dist -name '*.txt' -exec cp -v {} package \;
          find dist -name '*.ini' -exec cp -v {} package \;
          cp dist -name '*.md' -exec cp -v {} package \;

          # 创建版本号变量
          VERSION=${GITHUB_REF_NAME#v}
          ZIP_NAME="TextGrid2oto-${VERSION}-windows.zip"

          # 打包
          cd package && zip -r ../$ZIP_NAME ./*

      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
          files: |
            TextGrid2oto-*.zip
          body: |
            ## 版本 ${{ github.ref_name }} 更新内容

            ### 包含组件
            - TextGrid2oto (Windows x64)
            - hira2roma (Windows x64)

            ### 配置文件
            - run-config.txt
            - presamp.ini
            - opencpop-extension.txt
            - hira2roma-list.txt