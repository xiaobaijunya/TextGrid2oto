name: 自动打包发布程序

on:
  push:
    tags:
      - 'v*'  # 添加标签推送触发
  workflow_dispatch:
    inputs:
      version:
        description: '输入自定义版本号 (例如: 1.2.3)'
        required: false
        default: '0.1.2'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: 创建缓存目录
        run: |
          mkdir -p ~/.cache/pip
          mkdir -p ~/.cache/nuitka
          mkdir -p ~/.cache/build

      - name: 恢复依赖项缓存
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/nuitka
            ~/.cache/build
          key: ${{ runner.os }}-build-${{ hashFiles('**/requirements.txt') }}

      # 新增Nuitka安装和打包步骤
      - name: 安装Nuitka
        run: pip install nuitka

      - name: 打包main.py
        run: nuitka --standalone --onefile --enable-plugin=tk-inter --output-dir=build --assume-yes-for-downloads main.py

      - name: 打包hira2roma.py
        run: nuitka --standalone --onefile --enable-plugin=tk-inter --output-dir=build --assume-yes-for-downloads hira2roma.py

      - name: 重命名主程序并移动文件
        run: |
          Rename-Item D:\a\TextGrid2oto\TextGrid2oto\build\main.exe -NewName D:\a\TextGrid2oto\TextGrid2oto\build\TextGrid2oto.exe
          Copy-Item D:\a\TextGrid2oto\TextGrid2oto\build\TextGrid2oto.exe -Destination D:\a\TextGrid2oto\TextGrid2oto\TextGrid2oto.exe
          Copy-Item D:\a\TextGrid2oto\TextGrid2oto\build\hira2roma.exe -Destination D:\a\TextGrid2oto\TextGrid2oto\hira2roma.exe

      - name: 创建缓存目录（构建输出）
        run: |
          mkdir -p ~/.cache/build

      - name: 缓存构建输出
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/nuitka
            ~/.cache/build
          key: ${{ runner.os }}-build-output-${{ github.sha }}

      - name: 创建发布压缩包
        id: create_zip  # 添加步骤ID用于输出变量
        shell: pwsh
        run: |
          # 版本号处理逻辑
          if ("${{ github.event.inputs.version }}" -ne "") {
            $version = "${{ github.event.inputs.version }}"
          } elseif ("${{ github.ref_type }}" -eq "tag") {
            $version = "${{ github.ref_name }}".Replace("v", "")
          } else {
            $version = "dev"
          }
          # 输出版本变量到工作流
          echo "version=$version" >> $env:GITHUB_OUTPUT
          # 压缩文件（使用相对路径）
          $files = @('*.md', '*.txt', '*.ini', '*.exe')
          Compress-Archive -Path $files -DestinationPath "TextGrid2oto-$version-windows.zip"

      - name: 发布到 GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ steps.create_zip.outputs.version }}"  # 引用输出变量
          draft: false
          prerelease: false
          files: |
            TextGrid2oto-${{ steps.create_zip.outputs.version }}-windows.zip  # 精确匹配文件名
          body: |
            ## 版本 ${{ steps.create_zip.outputs.version }} 更新内容

            ### 包含组件
            - TextGrid2oto (Windows x64)
            - hira2roma (Windows x64)

            ### 配置文件
            - run-config.txt
            - presamp.ini
            - opencpop-extension.txt
            - hira2roma-list.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 推荐使用默认token