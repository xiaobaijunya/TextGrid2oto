name: Auto Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: '输入自定义版本号 (例如: 1.2.3)'
        required: false
        default: 'dev'

jobs:
  build:
    name: Build ${{ matrix.app }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        app: [main, hira2roma]
        include:
          - os: windows-latest
            sys_name: windows
            arch: x64
          - app: main
            pkg_name: TextGrid2oto
          - app: hira2roma
            pkg_name: hira2roma

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/AppData/Local/pip/Cache  # Windows专用路径
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Cache Nuitka builds
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/Nuitka
            ~/AppData/Local/Nuitka  # Windows专用路径
          key: nuitka-${{ runner.os }}-${{ matrix.app }}
          restore-keys: |
            nuitka-${{ runner.os }}-

      - name: Install Nuitka
        run: pip install --cache-dir ~/.cache/pip nuitka

      - name: Build executable
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF_NAME#v}
          fi

          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            OUTPUT_FILE="${{ matrix.pkg_name }}-${VERSION}-${{ matrix.sys_name }}-${{ matrix.arch }}.exe"
          else
            OUTPUT_FILE="${{ matrix.pkg_name }}-${VERSION}-${{ matrix.sys_name }}-${{ matrix.arch }}"
          fi

          python -m nuitka --standalone --onefile --assume-yes-for-downloads ${{ matrix.app }}.py

          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv ${{ matrix.app }}.exe "${OUTPUT_FILE}"
          else
            mv ${{ matrix.app }} "${OUTPUT_FILE}"
          fi

          ls -lh "${OUTPUT_FILE}"

#      - name: Copy common files
#        run: |
#          # 复制通用文件到当前目录
#          cp *.txt *.ini *.md . || echo "某些文件可能不存在，继续执行"
#
#      - name: Upload artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: ${{ matrix.pkg_name }}-${{ matrix.sys_name }}
#          path: |
#            ${{ matrix.pkg_name }}-*-${{ matrix.sys_name }}*
#            *.txt
#            *.ini
#            *.md

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p dist

          # 复制所有可执行文件
          cp -v artifacts/TextGrid2oto-windows/*.exe TextGrid2oto/dist/
          cp -v artifacts/hira2roma-windows/*.exe TextGrid2oto/dist/
          
          
          cp -v artifacts/*.txt TextGrid2oto/dist/
          cp -v artifacts/*.ini TextGrid2oto/dist/
          cp -v artifacts/*.md TextGrid2oto/dist/

          # 创建ZIP压缩包
          ZIP_NAME="TextGrid2oto-${GITHUB_REF_NAME#v}-windows.zip"
          cd dist && zip -r ../$ZIP_NAME ./*

          ls -lh ../$ZIP_NAME

      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: |
            Auto-generated build for version ${{ github.ref_name }}
            - 包含组件：
              * TextGrid2oto (Windows)
              * hira2roma (Windows)
          files: |
            TextGrid2oto-*.zip